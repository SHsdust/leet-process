<dec f='include/c++/12.2.0/bits/hashtable.h' l='853' type='std::_Hashtable::iterator std::_Hashtable::_M_insert_unique_node(std::_Hashtable::size_type __bkt, std::_Hashtable::__hash_code , std::_Hashtable::__node_ptr __n, std::_Hashtable::size_type __n_elt = 1)'/>
<use f='include/c++/12.2.0/bits/hashtable.h' l='2081' u='c' c='_ZNSt10_Hashtable10_M_emplaceESt17integral_constantIbLb1EEDpOTL0__'/>
<def f='include/c++/12.2.0/bits/hashtable.h' l='2137' ll='2165' type='std::_Hashtable::iterator std::_Hashtable::_M_insert_unique_node(std::_Hashtable::size_type __bkt, std::_Hashtable::__hash_code __code, std::_Hashtable::__node_ptr __node, std::_Hashtable::size_type __n_elt = 1)'/>
<use f='include/c++/12.2.0/bits/hashtable.h' l='2254' u='c' c='_ZNSt10_Hashtable16_M_insert_uniqueEOTL0__OTL0_0_RKTL0_1_'/>
<doc f='include/c++/12.2.0/bits/hashtable.h' l='849'>// Insert node __n with hash code __code, in bucket __bkt if no
      // rehash (assumes no element with same key already present).
      // Takes ownership of __n if insertion succeeds, throws otherwise.</doc>
